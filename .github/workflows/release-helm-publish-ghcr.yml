name: 'Release: Publish Helm Chart to GHCR'

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      version:
        required: false
        type: string
        description: '(Optional) Version to set for the chart, must start with "v", example: v1.2.1'
        default: v

jobs:
  build:
    defaults:
     run:
       working-directory: chart
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          sparse-checkout: chart

      - name: Set Helm Chart version
        env:
          GIT_TAG_NAME: ${{ inputs.version || github.event.release.tag_name || github.ref_name }}
        run: |
          GIT_TAG_VER=${GIT_TAG_NAME#v}
          echo "Setting Helm Chart version and appVersion to ${GIT_TAG_VER} (Chart.yaml)"
          sed -i "s/\(version\|appVersion\): [0-9]\+\.[0-9]\+\.[0-9]\+/\1: ${GIT_TAG_VER}/g" "Chart.yaml"
          echo "Setting Helm Chart image tag to ${GIT_TAG_NAME} (values.yaml, README.md)"
          sed -i "s/\([[:space:]]*tag\): v[0-9]\+\.[0-9]\+\.[0-9]\+/\1: ${GIT_TAG_NAME}/" "values.yaml"
          sed -i "s/\(image\.tag.*\)\"v[0-9]\+\.[0-9]\+\.[0-9]\+\"/\1\"${GIT_TAG_NAME}\"/" "README.md"

      - name: Helm lint
        run: helm lint

      #- name: Helm Template
      #  run: helm template .

      - name: Package Helm chart
        run: helm package . --destination .

      - name: Upload artifact for deploy job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-chart
          path: chart/*.tgz
          retention-days: 1
          compression-level: 0

  deploy:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs:  build
    steps:
      - name: Download Artifact from build job
        uses: actions/download-artifact@v5
        with:
          name: ${{ github.event.repository.name }}-chart
          path: .output_chart

      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      ## Alternative registry login approach with just Helm
      #- name: Helm Login to GitHub Container Registry
      #  run: >
      #    echo "${{ secrets.GITHUB_TOKEN }}" |
      #    helm registry login ghcr.io --username ${{ github.actor }} --password-stdin

      - name: Helm Push chart to GHCR
        run: |
          owner="${GITHUB_REPOSITORY_OWNER,,}"
          while IFS= read -r -d '' pkg; do
            echo "Pushing ${pkg} to ghcr.io/$owner/${{ github.event.repository.name }}/charts"
            helm push "${pkg}" "oci://ghcr.io/$owner/${{ github.event.repository.name }}/charts"
          done < <(find .output_chart/ -type f -name '*.tgz' -print0)

      ## Cleanup: Alternative registry login approach with just Helm
      #- name: Post Helm Login to GitHub Container Registry
      #  run: helm registry logout ghcr.io
